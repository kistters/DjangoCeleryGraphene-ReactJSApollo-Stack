version: '3'

services:

  react-front:
    image: adventure-frontend
    volumes:
      - ./react-front:/usr/src/app:delegated
      - /usr/src/app/node_modules
    depends_on:
      - django-back
    ports:
      - "3000:3000"
    command: npm start
    networks:
      - compose-network

  django-back:
    image: adventure-backend
    command: ["python", "manage.py", "runserver", "0.0.0.0:8000"]
    ports:
      - "8000:8000"
    env_file:
        - .env
    volumes:
      - .:/code
    environment:
      DJANGO_DATABASE_HOST: postgres-service
      DJANGO_REDIS_HOST: redis-service
    depends_on:
      - postgres-service
      - redis-service
    networks:
      - compose-network

  celery-worker-back:
      image: adventure-backend
      command: celery -A adventure worker --loglevel=INFO
      ports: []
      env_file:
        - .env
      volumes:
        - .:/code
      depends_on:
        - rabbitmq-service
        - postgres-service
      networks:
        - compose-network


## -- services --

  postgres-service:
    image: postgres:alpine
    environment:
      POSTGRES_PASSWORD: "root"
      POSTGRES_DB: "adventure"
    ports:
      - "5432:5432"
    volumes:
      - .data/postgres:/var/lib/postgresql/data
    networks:
      - compose-network

  rabbitmq-service:
    image: rabbitmq:3.7.0-management-alpine
    ports:
      - "15672:15672"
    networks:
      - compose-network

  redis-service:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - compose-network

networks:
  compose-network:
    driver: bridge
